/* tslint:disable */
/* eslint-disable */
/**
 * P2P地震情報 API仕様書
 * - 商用・非商用問わず無償（無料）でご利用になれます。 [二次利用できます · P2P地震情報](https://www.p2pquake.net/secondary_use/) をご確認ください。 - 以下のレート制限があります。超えるとレスポンスが遅くなったり拒否 (HTTP ステータスコード 429) される場合があります。   - /history: 60 リクエスト/分 (IP アドレス毎)   - /jma: 10 リクエスト/分 (IP アドレス毎)
 *
 * The version of the OpenAPI document: 2.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "./runtime";
/**
 *
 * @export
 * @interface EEWAllOfAreas
 */
export interface EEWAllOfAreas {
  /**
   * 府県予報区
   * @type {string}
   * @memberof EEWAllOfAreas
   */
  pref: string;
  /**
   * 地域名（細分区域名）
   * @type {string}
   * @memberof EEWAllOfAreas
   */
  name: string;
  /**
   * 最大予測震度の下限
   * システムの都合で小数点が付きますが整数部のみ有効です。
   * @type {number}
   * @memberof EEWAllOfAreas
   */
  scaleFrom: EEWAllOfAreasScaleFromEnum;
  /**
   * 最大予測震度の上限
   * システムの都合で小数点が付きますが整数部のみ有効です。
   * @type {number}
   * @memberof EEWAllOfAreas
   */
  scaleTo: EEWAllOfAreasScaleToEnum;
  /**
   * 警報コード
   * @type {string}
   * @memberof EEWAllOfAreas
   */
  kindCode?: EEWAllOfAreasKindCodeEnum;
  /**
   * 主要動の到達予測時刻
   * @type {string}
   * @memberof EEWAllOfAreas
   */
  arrivalTime?: string;
}

/**
 * @export
 */
export const EEWAllOfAreasScaleFromEnum = {
  NUMBER_MINUS1: -1,
  NUMBER_0: 0,
  NUMBER_10: 10,
  NUMBER_20: 20,
  NUMBER_30: 30,
  NUMBER_40: 40,
  NUMBER_45: 45,
  NUMBER_50: 50,
  NUMBER_55: 55,
  NUMBER_60: 60,
  NUMBER_70: 70,
} as const;
export type EEWAllOfAreasScaleFromEnum =
  typeof EEWAllOfAreasScaleFromEnum[keyof typeof EEWAllOfAreasScaleFromEnum];

/**
 * @export
 */
export const EEWAllOfAreasScaleToEnum = {
  NUMBER_MINUS1: -1,
  NUMBER_0: 0,
  NUMBER_10: 10,
  NUMBER_20: 20,
  NUMBER_30: 30,
  NUMBER_40: 40,
  NUMBER_45: 45,
  NUMBER_50: 50,
  NUMBER_55: 55,
  NUMBER_60: 60,
  NUMBER_70: 70,
  NUMBER_99: 99,
} as const;
export type EEWAllOfAreasScaleToEnum =
  typeof EEWAllOfAreasScaleToEnum[keyof typeof EEWAllOfAreasScaleToEnum];

/**
 * @export
 */
export const EEWAllOfAreasKindCodeEnum = {
  _10: "10 (緊急地震速報（警報） 主要動について、未到達と予測)",
  _11: "11 (緊急地震速報（警報） 主要動について、既に到達と予測)",
  _19Plum: "19 (緊急地震速報（警報） 主要動の到達予想なし（PLUM法による予想）)",
} as const;
export type EEWAllOfAreasKindCodeEnum =
  typeof EEWAllOfAreasKindCodeEnum[keyof typeof EEWAllOfAreasKindCodeEnum];

/**
 * Check if a given object implements the EEWAllOfAreas interface.
 */
export function instanceOfEEWAllOfAreas(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "pref" in value;
  isInstance = isInstance && "name" in value;
  isInstance = isInstance && "scaleFrom" in value;
  isInstance = isInstance && "scaleTo" in value;

  return isInstance;
}

export function EEWAllOfAreasFromJSON(json: any): EEWAllOfAreas {
  return EEWAllOfAreasFromJSONTyped(json, false);
}

export function EEWAllOfAreasFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EEWAllOfAreas {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    pref: json["pref"],
    name: json["name"],
    scaleFrom: json["scaleFrom"],
    scaleTo: json["scaleTo"],
    kindCode: !exists(json, "kindCode") ? undefined : json["kindCode"],
    arrivalTime: !exists(json, "arrivalTime") ? undefined : json["arrivalTime"],
  };
}

export function EEWAllOfAreasToJSON(value?: EEWAllOfAreas | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    pref: value.pref,
    name: value.name,
    scaleFrom: value.scaleFrom,
    scaleTo: value.scaleTo,
    kindCode: value.kindCode,
    arrivalTime: value.arrivalTime,
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * P2P地震情報 API仕様書
 * - 商用・非商用問わず無償（無料）でご利用になれます。 [二次利用できます · P2P地震情報](https://www.p2pquake.net/secondary_use/) をご確認ください。 - 以下のレート制限があります。超えるとレスポンスが遅くなったり拒否 (HTTP ステータスコード 429) される場合があります。   - /history: 60 リクエスト/分 (IP アドレス毎)   - /jma: 10 リクエスト/分 (IP アドレス毎)
 *
 * The version of the OpenAPI document: 2.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "./runtime";
/**
 * キーは地域コードです。
 * @export
 * @interface UserquakeEvaluationAllOfAreaConfidences
 */
export interface UserquakeEvaluationAllOfAreaConfidences {
  /**
   * 信頼度（0～1）
   * P2P地震情報 Beta3 においては、 0未満: F、0.0以上0.2未満: E、0.2以上0.4未満: D、0.4以上0.6未満: C、0.6以上0.8未満: B、0.8以上: A です。
   * @type {number}
   * @memberof UserquakeEvaluationAllOfAreaConfidences
   */
  confidence?: number;
  /**
   * 件数
   * @type {number}
   * @memberof UserquakeEvaluationAllOfAreaConfidences
   */
  count?: number;
  /**
   * P2P地震情報 Beta3 における信頼度表示
   * @type {string}
   * @memberof UserquakeEvaluationAllOfAreaConfidences
   */
  display?: string;
}

/**
 * Check if a given object implements the UserquakeEvaluationAllOfAreaConfidences interface.
 */
export function instanceOfUserquakeEvaluationAllOfAreaConfidences(
  value: object
): boolean {
  let isInstance = true;

  return isInstance;
}

export function UserquakeEvaluationAllOfAreaConfidencesFromJSON(
  json: any
): UserquakeEvaluationAllOfAreaConfidences {
  return UserquakeEvaluationAllOfAreaConfidencesFromJSONTyped(json, false);
}

export function UserquakeEvaluationAllOfAreaConfidencesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UserquakeEvaluationAllOfAreaConfidences {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    confidence: !exists(json, "confidence") ? undefined : json["confidence"],
    count: !exists(json, "count") ? undefined : json["count"],
    display: !exists(json, "display") ? undefined : json["display"],
  };
}

export function UserquakeEvaluationAllOfAreaConfidencesToJSON(
  value?: UserquakeEvaluationAllOfAreaConfidences | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    confidence: value.confidence,
    count: value.count,
    display: value.display,
  };
}
